{"ast":null,"code":"var request = require(\"request\"); //octokit } = require(\"@octokit/core\");\n\n\nclass Repository {\n  constructor(url, release_url, version, version_date, recent_update) {\n    this.url = url;\n    this.release_url = release_url;\n    this.version = version;\n    this.version_date = version_date;\n    this.recent_update = recent_update;\n  }\n\n}\n/* Given a repo name add it to our locally stored list\n * string: repo_name\n * example:\n * addWatchedRepo(\"lumanu/gh-release-monitor\")\n */\n\n\nexports.addWatchedRepo = function addWatchedRepo(repo_name) {\n  const uri = \"https://api.github.com/repos/\" + repo_name + \"/releases\";\n  request({\n    method: 'GET',\n    uri: uri,\n    headers: {\n      'user-agent': 'node.js'\n    }\n  }, function (err, res, body) {\n    if (err) {\n      console.error('error:', err);\n    }\n\n    ;\n\n    try {\n      let temp_repo_list = [];\n      let rel_url = JSON.parse(res.body)[0].html_url;\n      let ver = JSON.parse(res.body)[0].tag_name;\n      let ver_date = JSON.parse(res.body)[0].published_at;\n      let temp_repo = new Repository(repo_name, rel_url, ver, ver_date, false);\n\n      if (localStorage.getItem('repo_list')) {\n        temp_repo_list = JSON.parse(localStorage.getItem('repo_list'));\n        temp_repo_list.push(temp_repo);\n        localStorage.setItem('repo_list', JSON.stringify(temp_repo_list));\n        window.location.reload(true);\n      } else {\n        localStorage.setItem('repo_list', [temp_repo]);\n        window.location.reload(true);\n      }\n    } catch (err) {\n      console.log(\"addWatchedRepo error = \", err);\n    }\n  });\n};\n/* Given a repo name remove it from our locally stored list\n * string: repo_name\n * example:\n * removeWatchedRepo(\"lumanu/gh-release-monitor\")\n */\n\n\nexports.removeWatchedRepo = function removeWatchedRepo(repo_name) {\n  let temp_repo_list = JSON.parse(localStorage.getItem('repo_list'));\n  let cleaned_repo_list = [];\n\n  if (temp_repo_list == null) {\n    return;\n  } else {\n    for (let i = 0; i < temp_repo_list.length; i++) {\n      //console.log(i + \" \" + JSON.stringify(temp_repo_list[i].url));\n      if (repo_name == temp_repo_list[i].url) {\n        console.log(repo_name + \" = \" + JSON.stringify(temp_repo_list[i].url));\n      } else {\n        cleaned_repo_list.push(temp_repo_list[i]);\n      }\n    }\n\n    localStorage.setItem('repo_list', JSON.stringify(cleaned_repo_list));\n    window.location.reload(true);\n  }\n};\n/* TODO:\n * Need to create a field for user to add a repo from panel\n * Need to set recent update flag / highlighting of column / change true to false\n * DONE.\n */","map":{"version":3,"sources":["/home/kevin/3repo-tracker/repo-tracker/src/app/Funcs.js"],"names":["request","require","Repository","constructor","url","release_url","version","version_date","recent_update","exports","addWatchedRepo","repo_name","uri","method","headers","err","res","body","console","error","temp_repo_list","rel_url","JSON","parse","html_url","ver","tag_name","ver_date","published_at","temp_repo","localStorage","getItem","push","setItem","stringify","window","location","reload","log","removeWatchedRepo","cleaned_repo_list","i","length"],"mappings":"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","sourcesContent":["var request = require(\"request\");\n//octokit } = require(\"@octokit/core\");\n\nclass Repository {\n  constructor(url, release_url, version, version_date, recent_update){\n    this.url = url;\n    this.release_url = release_url;\n    this.version = version;\n    this.version_date = version_date;\n    this.recent_update = recent_update;\n  }\n}\n\n/* Given a repo name add it to our locally stored list\n * string: repo_name\n * example:\n * addWatchedRepo(\"lumanu/gh-release-monitor\")\n */\nexports.addWatchedRepo = function addWatchedRepo(repo_name){\n  const uri = \"https://api.github.com/repos/\" + repo_name + \"/releases\";\n  request(\n    {\n        method: 'GET',\n        uri: uri,\n        headers: {'user-agent': 'node.js'}\n    }, function (err, res, body) {\n        if(err){console.error('error:', err)};\n        try{\n          let temp_repo_list = []\n          let rel_url        = JSON.parse(res.body)[0].html_url;\n          let ver            = JSON.parse(res.body)[0].tag_name;\n          let ver_date       = JSON.parse(res.body)[0].published_at;\n          let temp_repo      = new Repository(repo_name, rel_url, ver, ver_date, false);\n          if(localStorage.getItem('repo_list')){\n            temp_repo_list   = JSON.parse(localStorage.getItem('repo_list'));\n            temp_repo_list.push(temp_repo);\n            localStorage.setItem('repo_list', JSON.stringify(temp_repo_list));\n            window.location.reload(true);\n          } else{\n            localStorage.setItem('repo_list', [temp_repo]);\n            window.location.reload(true);\n          }\n        } catch(err){\n            console.log(\"addWatchedRepo error = \", err);\n        }\n        \n  });\n}\n\n/* Given a repo name remove it from our locally stored list\n * string: repo_name\n * example:\n * removeWatchedRepo(\"lumanu/gh-release-monitor\")\n */\nexports.removeWatchedRepo = function removeWatchedRepo(repo_name){\n  let temp_repo_list = JSON.parse(localStorage.getItem('repo_list'));\n  let cleaned_repo_list = []\n  if(temp_repo_list == null){\n    return;\n  } else{\n      for(let i = 0; i < temp_repo_list.length; i++){\n        //console.log(i + \" \" + JSON.stringify(temp_repo_list[i].url));\n        if(repo_name == temp_repo_list[i].url){\n          console.log(repo_name + \" = \" + JSON.stringify(temp_repo_list[i].url));\n        } else{\n            cleaned_repo_list.push(temp_repo_list[i])\n        }\n      }\n      localStorage.setItem('repo_list', JSON.stringify(cleaned_repo_list));\n      window.location.reload(true);\n  }\n}\n\n/* TODO:\n * Need to create a field for user to add a repo from panel\n * Need to set recent update flag / highlighting of column / change true to false\n * DONE.\n */"]},"metadata":{},"sourceType":"module"}